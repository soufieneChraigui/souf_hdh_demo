.java:init:
  image:
    name: ${BUILD_IMAGE_NAME}
  variables:
    MAVEN_CLI_ADDITIONAL_OPTS: " $MAVEN_CLI_OPTS -Djavax.net.ssl.trustStore=maven.jks -Djavax.net.ssl.trustStorePassword=changeit "
  before_script:
    - |
        if [ ! -z $CA_BUNDLE ]; then
          keytool -v -alias mavensrv -import -file $CA_BUNDLE -keystore maven.jks -storepass changeit -noprompt
        fi 
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository/

.java:build:
  extends: .java:init
  script:
    - cd $WORKING_DIR
    - echo ${PROJECT_PATH}
    - >
      if [ ! -z $CA_BUNDLE ]; then
        mvn $MAVEN_CLI_ADDITIONAL_OPTS clean package -s $MVN_CONFIG_FILE
      else
        mvn $MAVEN_CLI_OPTS clean package -s $MVN_CONFIG_FILE
      fi
  artifacts:
    paths:
      - ${ARTEFACT_DIR}
    expire_in: 1 seconds
  interruptible: true

.java:sonar-jacoco:
  extends: .java:init
  variables:
    GIT_DEPTH: "0"
  script:
    - cd $WORKING_DIR
    - mvn $MAVEN_CLI_ADDITIONAL_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent package test jacoco:report sonar:sonar -Dsonar.qualitygate.wait=true -Dsonar.login=$SONAR_TOKEN -s $MVN_CONFIG_FILE
  allow_failure: true

.java:sonar:
  extends: .java:init
  variables:
    GIT_DEPTH: "0"
  script:
    - cd $WORKING_DIR
    - >
      if [ ! -z $CA_BUNDLE ]; then
        mvn $MAVEN_CLI_ADDITIONAL_OPTS clean package test sonar:sonar -Dsonar.qualitygate.wait=true -Dsonar.projectKey=${PROJECT_KEY} -Dsonar.login=$SONAR_TOKEN -s $MVN_CONFIG_FILE
      else
        mvn $MAVEN_CLI_OPTS clean package test sonar:sonar -Dsonar.qualitygate.wait=true -Dsonar.projectKey=${PROJECT_KEY} -Dsonar.login=$SONAR_TOKEN -s $MVN_CONFIG_FILE
      fi
  allow_failure: true

.java:deploy:
  extends: .java:init
  script:
    - cd $WORKING_DIR
    - echo ${PROJECT_PATH}
    - >
      if [ ! -z $CA_BUNDLE ]; then
        mvn $MAVEN_CLI_ADDITIONAL_OPTS clean deploy -s $MVN_CONFIG_FILE -DaltReleaseDeploymentRepository=nexus::default::${NEXUS_HOST_URL}/repository/${PROJECT_PATH}-repository-release/ -DaltSnapshotDeploymentRepository=nexus::default::${NEXUS_HOST_URL}/repository/${PROJECT_PATH}-repository-snapshot/
      else
        mvn $MAVEN_CLI_OPTS clean deploy -s $MVN_CONFIG_FILE -DaltReleaseDeploymentRepository=nexus::default::${NEXUS_HOST_URL}/repository/${PROJECT_PATH}-repository-release/ -DaltSnapshotDeploymentRepository=nexus::default::${NEXUS_HOST_URL}/repository/${PROJECT_PATH}-repository-snapshot/
      fi
  artifacts:
    paths:
      - ${ARTEFACT_DIR}
    expire_in: 1 seconds
  interruptible: true